jQuery.fn.isInViewportByFrenify = function() {
    "use strict";
    var e = jQuery(this),
        t = jQuery(window),
        n = e.offset().top,
        o = n + e.outerHeight(),
        a = t.scrollTop();
    return [o > a && n < a, (a - n) / e.outerHeight() * 100]
};
var MowAjax = MowAjaxObject,
    MowBody = jQuery("body"),
    MowWrapper = jQuery(".mow-fn-wrapper"),
    MowVoteWait = !1,
    MowReactionWait = !1,
    MowNextPostWait = !1,
    MowQuickNav = 0,
    MowCounterAjaxPost = 1,
    MowEntityMap = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
        "`": "&#x60;",
        "=": "&#x3D;"
    };
! function(e) {
    "use strict";
    var t = {
            cat_id: "",
            page: 1,
            count: 5,
            parent: ""
        },
        n = 0,
        o = {
            ajaxRunning: !1,
            init: function() {
                this.cursor(), this.blog_info(), this.url_fixer(), this.hamburgerOpener__Mobile(), this.submenu__Mobile(), this.isotopeMasonry(), this.dataFnBgImg(), this.widget__pages(), this.widgetTitle(), this.countdown(), this.totopScroll(), this.seachSomething(), this.reversedMenu(), this.sidebarOpener(), this.voteOpener(), this.reaction(), this.ajaxNextPost(), this.nowReading(), this.transformReading(), this.stickyHeader(), this.stickyTopBar(), this.mobile__Menu(), this.single_post__gallery(), this.topQuickNav(), this.copyToClibpoard(), this.site_skin(), this.fixed_posts(), this.widget_posts_filter(), this.mega__topcat_filter(), this.mega__topcat_nav(), this.mega__hover(), this.ready(), this.signForm(), this.signIn(), this.signUp(), this.gallery_thumbs(), this.lightGallery(), this.singleNoAjax(), this.commentCloser(), this.video()
            },
            video: function() {
                function t() {
                    document.fullscreenElement || e(".fn__video_local").each((function() {
                        var t = e(this),
                            n = t[0],
                            o = t.closest(".fn__video_post");
                        n.muted ? o.removeClass("unmuted").addClass("muted") : o.removeClass("muted").addClass("unmuted"), n.paused ? o.addClass("paused") : o.removeClass("paused")
                    }))
                }
                e(".fn__video_youtube").each((function() {
                    var t = e(this),
                        n = t.closest(".fn__video_post");
                    t.YTPlayer({
                        onReady: function() {
                            n.addClass("ready")
                        }
                    })
                })), e(".fn__video_youtube").on("YTPFullScreenEnd", (function() {
                    var t = e(this),
                        n = t.closest(".fn__video_post");
                    t.YTPPause(), n.addClass("paused")
                })), e('[data-video="youtube"] .fn__video_btn_expand').off().on("click", (function() {
                    return e(this).closest(".fn__video_post").find(".fn__video_youtube").YTPFullscreen(), !1
                })), e('[data-video="youtube"] .fn__video_btn_volume').off().on("click", (function() {
                    var t = e(this).closest(".fn__video_post"),
                        n = t.find(".fn__video_youtube");
                    return n.YTPGetPlayer().isMuted() ? (n.YTPUnmute(), t.removeClass("muted").addClass("unmuted")) : (n.YTPMute(), t.removeClass("unmuted").addClass("muted")), !1
                })), e('[data-video="youtube"] .fn__video_btn_play').off().on("click", (function() {
                    var t = e(this).closest(".fn__video_post"),
                        n = t.find(".fn__video_youtube");
                    return t.hasClass("paused") ? (n.YTPPlay(), t.removeClass("paused")) : (n.YTPPause(), t.addClass("paused")), !1
                })), e('[data-video="local"] .fn__video_btn_play').off().on("click", (function() {
                    var t = e(this).closest(".fn__video_post"),
                        n = t.find(".fn__video_local")[0];
                    return n.paused ? (n.play(), t.removeClass("paused")) : (n.pause(), t.addClass("paused")), !1
                })), e('[data-video="local"] .fn__video_btn_volume').off().on("click", (function() {
                    var t = e(this).closest(".fn__video_post"),
                        n = t.find(".fn__video_local")[0];
                    return n.muted = !n.muted, n.muted ? t.removeClass("unmuted").addClass("muted") : t.removeClass("muted").addClass("unmuted"), !1
                })), e('[data-video="local"] .fn__video_btn_expand').off().on("click", (function() {
                    var t = e(this).closest(".fn__video_post").find(".fn__video_local")[0];
                    return t.requestFullscreen ? t.requestFullscreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen(), !1
                })), document.addEventListener("fullscreenchange", t), document.addEventListener("webkitfullscreenchange", t), document.addEventListener("mozfullscreenchange", t), document.addEventListener("msfullscreenchange", t)
            },
            commentCloser: function() {
                e(".fn__comments .respond-title a").off().on("click", (function() {
                    var t = e(this),
                        n = t.closest(".fn__comments"),
                        o = n.find(".respond_comment,.comment-list"),
                        a = t.siblings(".text");
                    return n.hasClass("opened") ? (n.removeClass("opened"), o.slideDown(), a.text(a.data("hide"))) : (n.addClass("opened"), o.slideUp(), a.text(a.data("show"))), !1
                }))
            },
            singleNoAjax: function() {
                "" === e(".mow_fn_blog_single").data("get-post-id") && e(".mow_fn_singlepost + .fn__preloader").css({
                    display: "none"
                })
            },
            lightGallery: function() {
                e().lightGallery && e(".fn__lg_lightbox").each((function() {
                    var t = e(this);
                    t.lightGallery(), t.length && t.data("lightGallery").destroy(!0), e(this).lightGallery({
                        selector: ".lightbox",
                        thumbnail: 1,
                        loadYoutubeThumbnail: !1,
                        loadVimeoThumbnail: !1,
                        showThumbByDefault: !1,
                        mode: "lg-fade",
                        download: !1,
                        getCaptionFromTitleOrAlt: !1
                    })
                }))
            },
            gallery_thumbs: function() {
                e(".fn__gallery_thumbs").each((function() {
                    var t = e(this),
                        n = t.find(".item:not(.item_more)"),
                        o = t.find(".items"),
                        a = 1;
                    if (o.height() > 120) {
                        n.each((function() {
                            e(this).position().top > 0 && a++
                        }));
                        var s = t.find(".item:nth-child(1)").width();
                        t.find(".item_more").css({
                            width: s + "px"
                        }).addClass("active").find("span").html("+" + a)
                    }
                }))
            },
            signUp: function() {
                e(document).on("click", '#mow_fn_register_form input[type="submit"]', (function(t) {
                    t.preventDefault();
                    var n = e("#mow_fn_register_username").val(),
                        o = e("#mow_fn_register_email").val(),
                        a = e("#mow_fn_register_password").val(),
                        s = e("#mow_fn_register_confirm_password").val(),
                        i = e(".mow_fn_register_popup");
                    if (n && o && a && s) {
                        i.hasClass("ajax_running") || i.addClass("ajax_running");
                        var r = {
                            action: "mow_fn_ajax_register",
                            security: MowAjax.nonce,
                            username: n,
                            email: o,
                            password: a,
                            confirm_password: s
                        };
                        return e.ajax({
                            type: "POST",
                            url: MowAjax.ajax_url,
                            cache: !1,
                            data: r,
                            success: function(t) {
                                var n = e.parseJSON(t),
                                    o = n.error,
                                    a = n.message;
                                e(".mow_fn_register_popup .ready_in .inn").hide(), e(".mow_fn_register_popup .ready_in .upp").show();
                                var s = e(".mow_fn_register_popup .ready_in .count"),
                                    r = e(".mow_fn_register_popup .error_field");
                                i.removeClass("ajax_running"), "logged" === o ? (i.addClass("ajax_success"), setTimeout((function() {
                                    s.text(2)
                                }), 1e3), setTimeout((function() {
                                    s.text(1)
                                }), 2e3), setTimeout((function() {
                                    s.text(0), location.reload()
                                }), 3e3)) : r.text(a)
                            },
                            error: function(e, t, n) {
                                i.removeClass("ajax_running")
                            }
                        }), !1
                    }
                }))
            },
            signIn: function() {
                e(document).on("click", '#mow_fn_login_form input[type="submit"]', (function(t) {
                    t.preventDefault();
                    var n = e("#mow_fn_login_username").val(),
                        o = e("#mow_fn_login_password").val(),
                        a = e("#mow_fn_login_rememberme").prop("checked"),
                        s = e(".mow_fn_register_popup");
                    if (n && o) {
                        s.hasClass("ajax_running") || s.addClass("ajax_running");
                        var i = {
                            action: "mow_fn_ajax_log_in",
                            security: MowAjax.nonce,
                            email: n,
                            password: o,
                            remember: a ? 1 : 0
                        };
                        return e.ajax({
                            type: "POST",
                            url: MowAjax.ajax_url,
                            cache: !1,
                            data: i,
                            success: function(t) {
                                var n = e.parseJSON(t),
                                    o = n.error,
                                    a = n.message;
                                e(".mow_fn_register_popup .ready_in .upp").hide(), e(".mow_fn_register_popup .ready_in .inn").show();
                                var i = e(".mow_fn_register_popup .ready_in .count"),
                                    r = e(".mow_fn_register_popup .error_field");
                                s.removeClass("ajax_running"), "logged" === o ? (s.addClass("ajax_success"), setTimeout((function() {
                                    i.text(2)
                                }), 1e3), setTimeout((function() {
                                    i.text(1)
                                }), 2e3), setTimeout((function() {
                                    i.text(0), location.reload()
                                }), 3e3)) : r.text(a)
                            },
                            error: function(e, t, n) {
                                s.removeClass("ajax_running")
                            }
                        }), !1
                    }
                }))
            },
            signForm: function() {
                var t = e(".mow_fn_sign_up_form"),
                    n = e(".mow_fn_sign_in_form");
                e(document).on("click", ".mow_fn_register_popup .register_closer, .mow_fn_register_popup .register_extra_closer", (function(e) {
                    return e.preventDefault(), MowBody.removeClass("register-popup-active"), !1
                })), e(document).on("click", ".mow_fn_register_opener", (function(e) {
                    return e.preventDefault(), MowBody.addClass("register-popup-active"), !1
                })), e(document).on("click", ".mow_fn_sign_up_btn", (function(e) {
                    return e.preventDefault(), t.fadeIn(), n.fadeOut(0), !1
                })), e(document).on("click", ".mow_fn_sign_in_btn", (function(e) {
                    return e.preventDefault(), t.fadeOut(0), n.fadeIn(), !1
                }))
            },
            mega__hover: function() {
                e(".mow_fn_main_nav > li").on("mouseenter", (function() {
                    var t = e(this);
                    (t.hasClass("menu-item-has-children") || t.children(".mow_fn_sub ").length) && MowBody.addClass("menu-overlay-enabled")
                })).on("mouseleave", (function() {
                    MowBody.removeClass("menu-overlay-enabled")
                }));
                var t = e(".fn__quick_nav");
                t.find(".icon_holder").on("mouseenter", (function() {
                    t.addClass("active"), MowBody.addClass("menu-overlay-enabled")
                })), t.on("mouseleave", (function() {
                    t.removeClass("active"), MowBody.removeClass("menu-overlay-enabled")
                }))
            },
            filterAjaxCategoryMenu: function() {
                t.parent.addClass("loading"), o.ajaxRunning = !0;
                var n, a, s, i = o.getDataFromStorage(t.cat_id, t.count, t.page);
                if (null != i) return n = i[0], a = i[1], s = i[2], o.filterAjaxCategoryMenu__success(n, t.page, a, s), !1;
                var r = {
                    action: "mow_fn_ajax_menu_posts_list",
                    security: MowAjax.nonce,
                    cat_id: t.cat_id,
                    page: t.page,
                    count: t.count
                };
                e.ajax({
                    type: "POST",
                    url: MowAjax.ajax_url,
                    cache: !1,
                    data: r,
                    success: function(n) {
                        var a = e.parseJSON(n);
                        o.filterAjaxCategoryMenu__success(a.content, t.page, a.prev, a.next)
                    },
                    error: function(e, n, a) {
                        t.parent.removeClass("loading"), o.ajaxRunning = !1
                    }
                })
            },
            filterAjaxCategoryMenu__success: function(e, n, a, s) {
                t.parent.find(".cat_content > ul").html(e), t.parent.find(".cat_page").val(n), t.parent.find(".prev-button").removeClass("disabled").addClass(a), t.parent.find(".next-button").removeClass("disabled").addClass(s), o.saveDataToStorage(t.cat_id, t.count, n, a, s, e), t.parent.removeClass("loading"), o.ajaxRunning = !1
            },
            mega__topcat_filter: function() {
                e(document).on("click", ".mow_fn_megasub_posts_top .cat_filter a, .mow_fn_megasub_posts_left .cat_filter a", (function(n) {
                    n.preventDefault();
                    var a = e(this),
                        s = a.closest("li"),
                        i = a.closest(".mow_fn_megasub_posts_top, .mow_fn_megasub_posts_left");
                    return a.hasClass("active") || o.ajaxRunning || (a.addClass("active"), s.siblings().find(".active").removeClass("active"), t.cat_id = a.data("id"), t.parent = i, t.count = 4, t.page = 1, o.filterAjaxCategoryMenu()), !1
                }))
            },
            saveDataToStorage: function(e, t, n, o, a, s) {
                if ("undefined" != typeof Storage) {
                    var i = {
                            prev: o,
                            next: a,
                            content: s
                        },
                        r = JSON.stringify(i);
                    sessionStorage.setItem("storedDate_" + e + "_" + t + "_" + n, r)
                }
            },
            getDataFromStorage: function(e, t, n) {
                if ("undefined" != typeof Storage) {
                    var o = sessionStorage.getItem("storedDate_" + e + "_" + t + "_" + n);
                    if (null !== o) {
                        var a = JSON.parse(o);
                        return [a.content, a.prev, a.next]
                    }
                }
                return null
            },
            mega__topcat_nav: function() {
                e(document).on("click", ".mow_fn_megasub_posts_top .nav-buttons > *, .mow_fn_megasub_posts_left .nav-buttons > *", (function(n) {
                    n.preventDefault();
                    var a = e(this);
                    if (!a.hasClass("disabled") && !o.ajaxRunning) {
                        var s, i = a.closest(".mow_fn_megasub_posts_top, .mow_fn_megasub_posts_left"),
                            r = a.hasClass("next-button") ? 1 : -1;
                        s = i.find(".cat_filter .active").length ? i.find(".cat_filter .active").data("id") : i.find("input.cat_id").val();
                        var l = parseInt(i.find(".cat_page").val()) + r;
                        t.cat_id = s, t.parent = i, t.count = 4, t.page = l, o.filterAjaxCategoryMenu()
                    }
                    return !1
                }))
            },
            widget_posts_filter: function() {
                e(document).on("click", ".fn__widget_filters a", (function(t) {
                    t.preventDefault();
                    var n = e(this),
                        o = n.closest(".fn__widget_filters");
                    if (!n.hasClass("active")) {
                        n.siblings().removeClass("active"), n.addClass("active");
                        var a = n.data("class");
                        o.parent().find(".fn__widget_filter_content > *").removeClass("active"), o.parent().find(".fn__widget_filter_content > ." + a).addClass("active")
                    }
                    return !1
                }))
            },
            fixed_posts: function() {
                e(document).on("click", ".mow_fn_fixed_posts .more_less a", (function(t) {
                    t.preventDefault();
                    var n = e(this),
                        o = n.closest(".mow_fn_fixed_posts");
                    return o.hasClass("opened") ? (o.removeClass("opened"), n.find(".t_title span").text(n.data("more"))) : (o.addClass("opened"), n.find(".t_title span").text(n.data("less"))), !1
                }))
            },
            site_skin: function() {
                e(document).on("click", ".fn__skin .light", (function(t) {
                    return t.preventDefault(), e("html").attr("data-site-skin", "light"), localStorage.mow_skin = "light", !1
                })), e(document).on("click", ".fn__skin .dark", (function(t) {
                    return t.preventDefault(), e("html").attr("data-site-skin", "dark"), localStorage.mow_skin = "dark", !1
                }))
            },
            copyToClibpoard: function() {
                e(".frenify__copy_link").off().on("click", (function() {
                    var t = e(this),
                        n = e("<input>");
                    e("body").append(n), n.val(t.attr("href")).select(), document.execCommand("copy"), n.remove();
                    var o = e('<div class="frenify__copy_dialog">' + MowAjax.copiedText + "</div>");
                    return e("body").append(o), setTimeout((function() {
                        o.remove()
                    }), 1500), !1
                }))
            },
            topQuickNav: function() {
                var t = 0;
                e(".mow_fn_stickynav").length && (t = e(".mow_fn_stickynav").outerHeight()), e(".fn__quick_nav .item").off().on("click", (function() {
                    var n = e(this).data("id"),
                        o = e('.mow_fn_blog_single[data-post-id="' + n + '"]').offset().top - 80 - t;
                    e([document.documentElement, document.body]).animate({
                        scrollTop: o + 400
                    }, 0), setTimeout((function() {
                        e([document.documentElement, document.body]).animate({
                            scrollTop: o
                        }, 500)
                    }), 1), e(".fn__quick_nav").removeClass("active"), MowBody.removeClass("menu-overlay-enabled")
                }))
            },
            single_post__gallery: function() {
                e(".fn__gallery_format .swiper").each((function() {
                    new Swiper(e(this)[0], {
                        loop: !0,
                        speed: 500,
                        spaceBetween: 0,
                        navigation: {
                            nextEl: e(this).closest(".fn__gallery_format").find(".swiper-button-next")[0],
                            prevEl: e(this).closest(".fn__gallery_format").find(".swiper-button-prev")[0]
                        },
                        slidesPerView: 1,
                        autoplay: {
                            delay: 7e3,
                            disableOnInteraction: !1
                        }
                    })
                }))
            },
            mobile__Menu: function() {
                var t = e(".mow_fn_mobnav"),
                    n = t.find(".mobmenu_opener"),
                    o = t.find(".item_featured a"),
                    a = t.find(".mob_bot"),
                    s = t.find(".mob_featured_bar");
                n.off().on("click", (function() {
                    return t.hasClass("menu_opened") ? (t.removeClass("menu_opened"), a.slideUp()) : (t.addClass("menu_opened").removeClass("featured_bar_opened"), s.slideUp(), a.slideDown()), !1
                })), o.off().on("click", (function() {
                    return t.hasClass("featured_bar_opened") ? (t.removeClass("featured_bar_opened"), s.slideUp()) : (t.addClass("featured_bar_opened").removeClass("menu_opened"), a.slideUp(), s.slideDown()), !1
                }))
            },
            stickyTopBar: function() {
                var t = e(".mow_fn_stickynav");
                t.length && t.on("mouseenter", (function() {
                    t.addClass("hover")
                })).on("mouseleave", (function() {
                    t.removeClass("hover")
                }))
            },
            stickyHeader: function() {
                var t = e(window).scrollTop();
                if (e(".mow_fn_banner__off_canvas").length) {
                    var n = e(".mow_fn_banner__off_canvas"),
                        o = 1 - t / 2 / n.height();
                    o < .5 && (o = .5), o > 1 && (o = 1), n.css({
                        opacity: o
                    })
                }
                var a = 0,
                    s = e("#mow_fn_header").offset().top - e("body").offset().top;
                e("#wpadminbar").length && (a = e("#wpadminbar").height()), a += 40;
                var i = t;
                e(".mow_fn_fixed_posts,.mow_fn_fixed_right_bar").css({
                    top: 200 + s + "px"
                }), i > 170 + s - a && (i = 170 + s - a), e(".mow_fn_fixed_posts,.mow_fn_fixed_right_bar").addClass("ready").css({
                    transform: "translateY(-" + i + "px)"
                }), t > 500 ? MowBody.addClass("totop_scrolled") : MowBody.removeClass("totop_scrolled");
                var r = e(".mow_fn_fixed_totop");
                if (r.length) {
                    var l = t / (e(document).height() - e(window).height()) * 100;
                    r.find(".progress span").css({
                        height: Math.round(l) + "%"
                    })
                }
                e(".mow_fn_stickynav").length && (t > e("#mow_fn_header").outerHeight() + 50 ? MowBody.addClass("sticky-active") : MowBody.removeClass("sticky-active"))
            },
            transformReading: function() {
                var t = e(".mow_fn_stickynav.ajax_enable");
                if (t.length && MowBody.hasClass("single-post")) {
                    var n = 0;
                    e(window).scroll((function() {
                        var o = e(this).scrollTop();
                        o > n && t.addClass("active"), n = o
                    }))
                }
            },
            nowReading: function() {
                var t = e(".mow_fn_stickynav");
                if (t.length) {
                    var o = e(".header_post_reading .reading_post .title"),
                        a = t.find(".progress");
                    e(window).on("scroll", (function() {
                        var o = e(this).scrollTop();
                        o > n ? t.addClass("scrolled_down").removeClass("scrolled_up") : o < n && t.addClass("scrolled_up").removeClass("scrolled_down"), n = o
                    })), e(window).on("resize scroll", (function() {
                        e(".mow_fn_blog_single").each((function() {
                            var t = e(this),
                                n = t.isInViewportByFrenify(),
                                s = n[1];
                            if (n[0]) {
                                var i = t.data("post-title");
                                o.html() !== i && o.fadeOut(200, (function() {
                                    o.html(t.data("post-title")), o.fadeIn(200)
                                }));
                                var r = window.location.href,
                                    l = t.data("post-url");
                                r !== l && window.history.pushState("", i, l)
                            }
                            s >= 0 && s <= 100 && a.css({
                                width: s + "%"
                            })
                        }))
                    }))
                }
            },
            ajaxNextPost: function() {
                var t = e(".mow_fn_singleajax");
                e(".mow_fn_singleajax").length && !MowNextPostWait && e(document).scroll((function() {
                    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - e("#mow_fn_footer").outerHeight() && !MowNextPostWait) {
                        var n = e(".mow_fn_blog_single").last().data("get-post-id");
                        if ("" === n) return MowNextPostWait = !0, MowBody.addClass("no-prev-post"), !1;
                        MowBody.addClass("prev-post-loading"), MowNextPostWait = !0;
                        var a = {
                            action: "mow_fn_get_prev_post",
                            ID: n,
                            security: MowAjax.nonce
                        };
                        e.ajax({
                            type: "POST",
                            url: MowAjax.ajax_url,
                            cache: !1,
                            data: a,
                            success: function(n) {
                                1 === ++MowQuickNav && MowBody.addClass("blog-anchor-active");
                                var a = e.parseJSON(n);
                                t.append(a.output), o.init(), setTimeout((function() {
                                    MowNextPostWait = !1
                                }), 2e3), MowBody.removeClass("prev-post-loading"), MowCounterAjaxPost++;
                                var s = t.children().last(),
                                    i = MowCounterAjaxPost < 10 ? "0" + MowCounterAjaxPost : MowCounterAjaxPost;
                                e(".fn__quick_nav ul").append('<li><div class="item" data-id="' + s.data("post-id") + '" role="button"><span class="count"><span>' + i + "</span></span><h4><span>" + s.data("post-title") + "</span></h4></div></li>"), e(".fn__quick_nav .icon_count").text(MowCounterAjaxPost), e(".fn__quick_nav li").addClass("ready"), o.topQuickNav()
                            },
                            error: function(e, t, n) {}
                        })
                    }
                }))
            },
            voteOpener: function() {
                e(".mow_fn_votes").off().on("click", (function() {
                    var t = e(this),
                        n = t.find(".vote_info");
                    t.hasClass("opened") ? (t.removeClass("opened"), n.slideUp(300)) : (t.addClass("opened"), n.slideDown(300))
                })), e(".mow_fn_vote_up").off().on("click", (function(t) {
                    t.preventDefault();
                    var n = e(this);
                    return n.closest(".mow_fn_votes").hasClass("up_action") || o.vote(n, "up"), !1
                })), e(".mow_fn_vote_down").off().on("click", (function(t) {
                    t.preventDefault();
                    var n = e(this);
                    return n.closest(".mow_fn_votes").hasClass("down_action") || o.vote(n, "down"), !1
                }))
            },
            vote: function(t, n) {
                if (!0 === MowVoteWait) return !1;
                var o = t.closest(".mow_fn_votes");
                o.addClass("loading"), MowVoteWait = !0;
                var a = {
                    action: "mow_fn_vote",
                    ID: o.data("id"),
                    voteAction: n,
                    security: MowAjax.nonce
                };
                e.ajax({
                    type: "POST",
                    url: MowAjax.ajax_url,
                    cache: !1,
                    data: a,
                    success: function(t) {
                        var a = e.parseJSON(t);
                        o.find(".result_vote .count").text(a.count__result), o.find(".vote_info").html(a.result__text), o.removeClass("loading"), o.find(".result_vote .action").text(a.difference), o.removeClass("up_action down_action").addClass(n + "_action"), MowVoteWait = !1
                    },
                    error: function(e, t, n) {}
                })
            },
            escapeHTML: function(e) {
                return String(e).replace(/[&<>"'`=\/]/g, (function(e) {
                    return MowEntityMap[e]
                }))
            },
            reaction: function() {
                e(".mow_fn_reaction_btn").off().on("click", (function() {
                    var t = e(this);
                    if (!0 === MowReactionWait) return !1;
                    t.closest(".mow_fn_reactions").addClass("loading"), MowReactionWait = !0;
                    var n = t.data("id"),
                        a = {
                            action: "mow_fn_reactions",
                            ID: parseInt(n),
                            ajax_action: o.escapeHTML(t.data("action")),
                            security: MowAjax.nonce
                        };
                    return e.ajax({
                        type: "POST",
                        url: MowAjax.ajax_url,
                        cache: !1,
                        data: a,
                        success: function(o) {
                            var a = e.parseJSON(o),
                                s = a.reaction,
                                i = a.ajax_action;
                            (t = e('.mow_fn_reaction_btn[data-id="' + n + '"][data-action="' + s + '"]')).find(".count").html(a.count), "add" === i ? t.addClass("active") : t.removeClass("active"), MowReactionWait = !1
                        },
                        error: function(e, t, n) {}
                    }), !1
                }))
            },
            sidebarOpener: function() {
                e(".mow_fn_fixed_right_bar .trigger").off().on("click", (function() {
                    return MowBody.hasClass("offcanvas-active") ? MowBody.removeClass("offcanvas-active") : MowBody.addClass("offcanvas-active"), !1
                })), e(".mow_fn_offcanvas_menu .offcanvas_closer").off().on("click", (function() {
                    return MowBody.removeClass("offcanvas-active"), !1
                }))
            },
            moreMenu: function() {
                e(".mow_fn_nav").each((function() {
                    var t = e(this),
                        n = t.find(".menu"),
                        o = n.find(".more"),
                        a = o.find("a").width(),
                        s = 0,
                        i = 0,
                        r = "",
                        l = 60,
                        c = n.width();
                    if (t.parent().hasClass("ht_right_item")) {
                        l = 0;
                        var d = e(".mow_fn_header"),
                            _ = d.find(".ht_left"),
                            u = d.find(".ht_right .extra_link");
                        c = d.width() - _.outerWidth(!0) - u.outerWidth(!0) - 100
                    }
                    t.find(".mow_fn_main_nav > li").each((function() {
                        var t = e(this);
                        i += parseInt(t.outerWidth(!0)), s + (i += a) > c - l ? (t.addClass("disabled"), r += '<li class="' + t.attr("class") + '">' + t.html() + "</li>") : t.removeClass("disabled"), s += i -= a, i = 0
                    })), "" !== r ? (o.addClass("active"), o.find(".sub-menu").html(r)) : o.removeClass("active"), t.removeClass("nav__ready")
                }))
            },
            reversedMenu: function() {
                e(".mow_fn_main_nav ul").each((function() {
                    var t = e(this);
                    t.offset().left + 240 > e("body").width() && t.addClass("reverse")
                }))
            },
            seachSomething: function() {
                var t = e(".mow_fn_fixed_right_bar .search,.mow_fn_mobnav .mobsearch_opener, .icon_bar__search a"),
                    n = e(".mow_fn_searchbox"),
                    o = n.find('form input[type="text"]');
                t.off().on("click", (function() {
                    return MowBody.hasClass("search-active") ? MowBody.removeClass("search-active") : (MowBody.addClass("search-active"), o.val(""), setTimeout((function() {
                        o[0].focus()
                    }), 100)), !1
                })), n.find(".search_closer").off().on("click", (function() {
                    return MowBody.removeClass("search-active"), !1
                })), o.on("keypress", (function(t) {
                    "Enter" === t.key && (t.preventDefault(), e('.mow_fn_searchbox form input[type="submit"]').trigger("click"))
                }))
            },
            totopScroll: function() {
                e(".mow_fn_fixed_totop").off().on("click", (function(t) {
                    t.preventDefault();
                    var n = (e(window).scrollTop() - e(window).height()) / 2;
                    return n < 500 && (n = 500), n > 1500 && (n = 1500), e("html, body").animate({
                        scrollTop: 0
                    }, n), !1
                }))
            },
            ready: function() {
                e("html").addClass("ready")
            },
            countdown: function() {
                e(".fn__countdown__boxed").each((function() {
                    var t = e(this),
                        n = t.data("type");
                    if (!t.hasClass("ready")) {
                        if (t.addClass("ready"), "due_date" === n) var o = new Date(t.data("date")).getTime();
                        else if ("ever" === n) var a = 0,
                            s = 3600 * parseInt(t.data("hours")),
                            i = 60 * parseInt(t.data("minutes")),
                            r = 0,
                            l = a + s + i + r;
                        if ("due_date" === n) var c = setInterval((function() {
                            var e = (new Date).getTime(),
                                n = o - e,
                                a = Math.floor(n / 864e5),
                                s = Math.floor(n % 864e5 / 36e5),
                                i = Math.floor(n % 36e5 / 6e4),
                                r = Math.floor(n % 6e4 / 1e3);
                            a = a < 10 ? "0" + a : a, s = s < 10 ? "0" + s : s, i = i < 10 ? "0" + i : i, r = r < 10 ? "0" + r : r, t.find(".days h3").text(a), t.find(".hours h3").text(s), t.find(".minutes h3").text(i), t.find(".seconds h3").text(r), n < 0 && (t.find(".days h3").text(0), t.find(".hours h3").text(0), t.find(".minutes h3").text(0), t.find(".seconds h3").text(0), clearInterval(c))
                        }), 1e3);
                        else "ever" === n && setInterval((function() {
                            a = Math.floor(l / 86400), s = Math.floor(l % 86400 / 3600), i = Math.floor(l % 3600 / 60), r = Math.floor(l % 60), l >= 0 && (a = a < 10 ? "0" + a : a, s = s < 10 ? "0" + s : s, i = i < 10 ? "0" + i : i, r = r < 10 ? "0" + r : r, t.find(".days h3").text(a), t.find(".hours h3").text(s), t.find(".minutes h3").text(i), t.find(".seconds h3").text(r), l--)
                        }), 1e3)
                    }
                }))
            },
            widgetTitle: function() {
                e(".wp-block-group__inner-container > h1,.wp-block-group__inner-container > h2,.wp-block-group__inner-container > h3,.wp-block-group__inner-container > h4,.wp-block-group__inner-container > h5,.wp-block-group__inner-container > h6,.wp-block-search__label").each((function() {
                    var t = e(this);
                    t.after('<div class="wid-title"><span class="text"><span>' + t.text() + "</span></span></div>"), t.remove()
                }))
            },
            blog_info: function() {
                e(".wp-calendar-nav").length && e(".wp-calendar-nav").each((function() {
                    var t = e(this);
                    t.find("a").length || t.remove()
                }))
            },
            url_fixer: function() {
                e('a[href*="fn_ex_link"]').each((function() {
                    var t = e(this).attr("href").split("fn_ex_link/"),
                        n = MowAjax.siteurl + "/" + t[1];
                    e(this).attr("href", n)
                }))
            },
            cursor: function() {
                if (e(".frenify-cursor").length && e("body").length) {
                    const o = document.querySelector(".cursor-inner"),
                        a = document.querySelector(".cursor-outer");
                    e(".mow_fn_intro").length && 1;
                    var t = ".fn__quick_nav .icon_holder, .fn__quick_nav .item, .fn__widget_posts_yota .col_secondary .nav-buttons > *, .fn__lg_lightbox .lightbox, .mow_fn_megasub_posts_top .nav-buttons > *:not(.disabled),.mow_fn_votes .vote_top,.modal_ux_closer, .mow_fn_nav .trigger,.mow_fn_header .trigger,.fn_cs_intro_testimonials .prev, .fn_cs_intro_testimonials .next, .swiper-button-prev, .swiper-button-next, a, input[type='submit'], .cursor-link, button",
                        n = ".owl-carousel, .swiper-container, .cursor-link";
                    window.onmousemove = function(e) {
                        a.style.transform = "translate(" + e.clientX + "px, " + e.clientY + "px)", o.style.transform = "translate(" + e.clientX + "px, " + e.clientY + "px)", e.clientY, e.clientX
                    }, e("body").on("mouseenter", t, (function() {
                        o.classList.add("cursor-hover"), a.classList.add("cursor-hover")
                    })), e("body").on("mouseleave", t, (function() {
                        e(this).is("a") && e(this).closest(".cursor-link").length || (o.classList.remove("cursor-hover"), a.classList.remove("cursor-hover"))
                    })), o.style.visibility = "visible", a.style.visibility = "visible", MowBody.on("mouseenter", n, (function() {
                        o.classList.add("cursor-slider"), a.classList.add("cursor-slider")
                    })).on("mouseleave", n, (function() {
                        o.classList.remove("cursor-slider"), a.classList.remove("cursor-slider")
                    })), MowBody.on("mousedown", n, (function() {
                        o.classList.add("mouse-down"), a.classList.add("mouse-down")
                    })).on("mouseup", n, (function() {
                        o.classList.remove("mouse-down"), a.classList.remove("mouse-down")
                    }))
                }
            },
            widget__pages: function() {
                var t = e(".widget_pages ul");
                t.each((function() {
                    e(this).find("a").off().on("click", (function(n) {
                        var o = e(this),
                            a = o.parent("li"),
                            s = o.parents("li"),
                            i = a.parents("ul.children"),
                            r = o.next(),
                            l = t.find("li");
                        if (l.removeClass("opened"), r.length) return n.preventDefault(), r.parent("li").hasClass("active") ? (r.parent("li").removeClass("active"), r.slideUp()) : (s.hasClass("opened") || s.addClass("opened"), l.each((function() {
                            var t = e(this);
                            t.hasClass("opened") || t.find("ul.children").slideUp()
                        })), l.removeClass("active"), i.parent("li").addClass("active"), r.parent("li").addClass("active"), r.slideDown()), !1
                    }))
                }))
            },
            submenu__Mobile: function() {
                var t = e(".mow_fn_offcanvas_nav, ul.vert_menu_list, .widget_nav_menu ul.menu, .mow_fn_mobnav .mob_bot .mobile_menu"),
                    n = MowWrapper.data("mobile-autocollapse");
                t.each((function() {
                    e(this).find("a").off().on("click", (function(o) {
                        var a = e(this),
                            s = a.parent("li"),
                            i = a.parents("li"),
                            r = s.parents("ul.sub-menu"),
                            l = a.next(),
                            c = t.find("li");
                        if (c.removeClass("opened"), l.length) return o.preventDefault(), l.parent("li").hasClass("active") ? (l.parent("li").removeClass("active"), l.slideUp()) : (i.hasClass("opened") || i.addClass("opened"), c.each((function() {
                            var t = e(this);
                            t.hasClass("opened") || t.find("ul.sub-menu").slideUp()
                        })), c.removeClass("active"), r.parent("li").addClass("active"), l.parent("li").addClass("active"), l.slideDown()), !1;
                        "enable" === n && t.parent().parent().hasClass("opened") && (t.parent().parent().removeClass("opened").slideUp(), e(".mow_fn_mobilemenu_wrap .hamburger").removeClass("is-active"))
                    }))
                }))
            },
            hamburgerOpener__Mobile: function() {
                e(".mow_fn_mobilemenu_wrap .hamburger").off().on("click", (function() {
                    var t = e(this),
                        n = e(".mow_fn_mobilemenu_wrap .mobilemenu");
                    return t.hasClass("is-active") ? (t.removeClass("is-active"), n.removeClass("opened"), n.slideUp(500)) : (t.addClass("is-active"), n.addClass("opened"), n.slideDown(500)), !1
                }))
            },
            dataFnBgImg: function() {
                e("*[data-bg-img]").each((function() {
                    var t = e(this),
                        n = t.attr("data-bg-img"),
                        o = t.data("bg-img");
                    if (void 0 !== n) {
                        if (t.addClass("frenify-ready"), "" === o) return;
                        t.css({
                            backgroundImage: "url(" + o + ")"
                        })
                    }
                })), e("img.fn__svg").each((function() {
                    var t = e(this),
                        n = t.attr("class"),
                        o = t.attr("src");
                    e.get(o, (function(o) {
                        var a = e(o).find("svg");
                        void 0 !== n && (a = a.attr("class", n + " replaced-svg")), t.replaceWith(a)
                    }), "xml")
                }))
            },
            isotopeMasonry: function() {
                var t = !0;
                e("body").hasClass("rtl") && (t = !1);
                var n = e(".fn__masonry");
                e().isotope && n.each((function() {
                    e(this).isotope({
                        itemSelector: ".mas__in",
                        masonry: {},
                        isOriginLeft: t
                    })
                }));
                var o = e(".mow_fn_bloglist_masonry");
                e().isotope && o.each((function() {
                    e(this).isotope({
                        itemSelector: ".post_item",
                        masonry: {},
                        isOriginLeft: t
                    })
                }))
            }
        };
    e(document).ready((function() {
        o.init()
    })), e(window).on("resize", (function(e) {
        e.preventDefault(), o.gallery_thumbs(), o.isotopeMasonry(), o.moreMenu()
    })), e(window).on("scroll", (function(e) {
        e.preventDefault(), o.stickyHeader()
    })), e(window).on("load", (function(e) {
        e.preventDefault(), o.isotopeMasonry(), setTimeout((function() {
            o.isotopeMasonry()
        }), 200)
    })), window.addEventListener("load", (function() {
        o.moreMenu()
    })), e(window).on("elementor/frontend/init", o.rippleEffect)
}(jQuery);