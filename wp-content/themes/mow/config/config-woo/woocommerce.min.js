! function(o) {
    "use strict";
    var t = {
        cartWait: !1,
        bar: o(".mow_fn_woobar"),
        init: function() {
            this.magnificPopup(), this.openCartBox__Woo(), this.removeItemFromCart__Woo(), this.addToCart(), this.someCustomFunctions(), this.removeXFromCart(), this.qty(), o("body").bind("added_to_cart removed_from_cart updated_cart_totals updated_wc_div", this.updateCart)
        },
        imgToSVG: function() {
            o("img.fn__svg").each((function() {
                var t = o(this),
                    a = t.attr("class"),
                    e = t.attr("src");
                o.get(e, (function(e) {
                    var n = o(e).find("svg");
                    void 0 !== a && (n = n.attr("class", a + " replaced-svg")), t.replaceWith(n)
                }), "xml")
            }))
        },
        qty: function() {
            o(".qty").each((function() {
                var t = o(this);
                t.hasClass("ready") || (t.addClass("ready"), t.wrap('<div class="fn__qty"></div>'), t.closest(".fn__qty").append('<span class="up"><span></span></span><span class="down"><span></span></span>'))
            })), this.qtyInit()
        },
        qtyInit: function() {
            o(".fn__qty .up").off().on("click", (function() {
                var t = o(this);
                t.addClass("focused"), clearTimeout(100), setTimeout((function() {
                    t.removeClass("focused")
                }), 100);
                var a, e = t.closest(".fn__qty").find("input"),
                    n = e.attr("max"),
                    r = parseInt(e.val());
                return void 0 !== n && "" !== n && r >= n ? (a = r, !1) : (a = r + 1, e.val(a).trigger("change"), !1)
            })), o(".fn__qty .down").off().on("click", (function() {
                var t = o(this);
                t.addClass("focused"), clearTimeout(100), setTimeout((function() {
                    t.removeClass("focused")
                }), 100);
                var a, e = t.closest(".fn__qty").find("input"),
                    n = parseInt(e.val());
                return n <= e.attr("min") ? (a = n, !1) : (a = n - 1, e.val(a).trigger("change"), !1)
            }))
        },
        removeXFromCart: function() {
            o(".woocommerce table.shop_table td.product-remove a.remove,.woocommerce.widget_shopping_cart .cart_list li a.remove").text("")
        },
        someCustomFunctions: function() {
            var t = o("a.woocommerce-review-link");
            t.length && t.on("click", (function(t) {
                return t.preventDefault(), o("body,html").animate({
                    scrollTop: o(".woocommerce-tabs").offset().top - 150
                }, 1100), !1
            }));
            var a = o("p.cart-empty"),
                e = o("p.return-to-shop"),
                n = e.html(),
                r = a.html();
            a.length && (e.empty(), a.remove(), o(".woocommerce").append('<div class="fn_cart-empty"><span>' + r + "</span><span>" + n + "</span>"));
            var c = o(".woocommerce-account .woocommerce-MyAccount-content");
            c.length && c.parent().wrapInner('<div class="mow_fn_woo_myaccount"><div><div class="inner">');
            var i = o(".woocommerce form.login"),
                s = i.parent().find("h2");
            i.length && (s.hide(), i.wrap('<div class="mow_fn_woo_login"><div>').wrapInner('<div class="mow_fn_woo_login_inner"><div>'))
        },
        updateCart: function() {
            t.bar.addClass("updating"), t.qty();
            var a = o(".mow_fn_cartbox"),
                e = o(".icon_bar__woo .count"),
                n = "";
            o("body").hasClass("woocommerce-cart") && (n = "cart"), o("body").hasClass("woocommerce-checkout") && (n = "checkout");
            var r = {
                action: "mow_fn_remove_item_from_cart",
                security: MowAjaxObject.nonce,
                product_id: "",
                cart_item_key: "",
                pageFrom: n
            };
            o.ajax({
                type: "POST",
                url: MowAjaxObject.ajax_url,
                cache: !0,
                data: r,
                success: function(n) {
                    t.bar.removeClass("updating");
                    var r = o.parseJSON(n);
                    a.html(r.mow_fn_data), e.html(r.count), t.cartWait = !1, t.removeItemFromCart__Woo(), t.imgToSVG()
                },
                error: function() {
                    t.cartWait = !1
                }
            })
        },
        addToCart: function() {
            o("a.add_to_cart_button").on("click", (function() {
                var t = this;
                o(t).closest(".product").find("a img").animate({
                    opacity: .7
                }), setTimeout((function() {
                    o(t).closest(".product").addClass("added-to-cart-check"), setTimeout((function() {
                        o(t).closest(".product").find("a img").animate({
                            opacity: 1
                        })
                    }), 1e3)
                }), 1e3)
            }))
        },
        magnificPopup: function() {
            o().magnificPopup && o(".mow_fn_woo .images").each((function() {
                o(this).magnificPopup({
                    delegate: "a.zoom, .woocommerce-product-gallery__image a",
                    type: "image",
                    overflowY: "auto",
                    fixedContentPos: !1,
                    closeOnContentClick: !1,
                    closeBtnInside: !1,
                    mainClass: "mfp-with-zoom mfp-img-mobile",
                    image: {
                        verticalFit: !0,
                        titleSrc: function(o) {
                            return o.el.attr("title")
                        }
                    },
                    gallery: {
                        enabled: !0
                    }
                })
            }))
        },
        checkIfCartHasBeenChangedSomewhere: function() {
            var a = "",
                e = o(".mow_fn_cartbox"),
                n = o(".icon_bar__woo .count");
            o("body").hasClass("woocommerce-cart") && (a = "cart"), o("body").hasClass("woocommerce-checkout") && (a = "checkout");
            var r = {
                action: "mow_fn_remove_item_from_cart",
                security: MowAjaxObject.nonce,
                product_id: "",
                cart_item_key: "",
                pageFrom: a
            };
            o.ajax({
                type: "POST",
                url: MowAjaxObject.ajax_url,
                cache: !0,
                data: r,
                success: function(a) {
                    var r = o.parseJSON(a);
                    o(".mow_fn_hidden_info").remove(), o("body").append('<div class="mow_fn_hidden_info">' + r.mow_fn_data + "</div>"), t.bar.find(".woo__compare").html() !== o(".mow_fn_hidden_info .woo__compare").html() && (t.bar.find(".bar_content").prepend(r.update), t.bar.find(".fn_cartbox_updater").on("click", (function() {
                        return e.html(r.mow_fn_data), n.html(r.count), t.removeItemFromCart__Woo(), o(".mow_fn_hidden_info").remove(), t.bar.find(".woo_updater").slideUp(300).delay(300).remove(), !1
                    })), t.imgToSVG()), t.cartWait = !1
                },
                error: function() {
                    t.cartWait = !1
                }
            })
        },
        openCartBox__Woo: function() {
            o(".icon_bar__woo,.mow_fn_mobnav .item_woo").off().on("click", (function(o) {
                return o.preventDefault(), o.stopPropagation(), t.bar.hasClass("active") ? t.bar.removeClass("active") : (t.bar.addClass("active"), t.checkIfCartHasBeenChangedSomewhere()), !1
            })), o(".mow_fn_woobar .bar_closer a,.mow_fn_woobar .bar_extra_closer").off().on("click", (function() {
                return t.bar.removeClass("active"), !1
            }))
        },
        removeItemFromCart__Woo: function() {
            o(".fn_cartbox_delete_item").off().on("click", (function(a) {
                a.preventDefault(), t.cartWait = !0, t.bar.addClass("updating");
                var e = o(this).closest(".fn_cartbox_item"),
                    n = e.data("id"),
                    r = e.data("key"),
                    c = o(".mow_fn_cartbox"),
                    i = o(".icon_bar__woo .count"),
                    s = {
                        action: "mow_fn_remove_item_from_cart",
                        product_id: n,
                        security: MowAjaxObject.nonce,
                        pageFrom: "",
                        cart_item_key: r
                    };
                return o.ajax({
                    type: "POST",
                    url: MowAjaxObject.ajax_url,
                    cache: !0,
                    data: s,
                    success: function(a) {
                        var e = o.parseJSON(a);
                        c.html(e.mow_fn_data), i.html(e.count), t.cartWait = !1, t.removeItemFromCart__Woo(), t.imgToSVG(), t.bar.removeClass("updating")
                    },
                    error: function() {
                        t.cartWait = !1, t.bar.removeClass("updating")
                    }
                }), !1
            }))
        }
    };
    o(document).ready((function() {
        t.init()
    })), o(window).on("resize", (function(o) {
        o.preventDefault()
    })), o(window).on("scroll", (function(o) {
        o.preventDefault()
    }))
}(jQuery);